version: '3.8'

services:
  mimic_db:
    image: ${IMAGE_NAME}
    restart: always
    build:
      context: ../../
      dockerfile: ./src/docker_db/Dockerfile
      args:
        - LOCAL_MIMICIII_BUILD_TOOLS=${LOCAL_MIMICIII_BUILD_TOOLS}
        - POSTGRES_ENTRYPOINT=${POSTGRES_ENTRYPOINT}
    environment:
      - MIMIC_PASSWORD=${MIMIC_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=${PGDATA}
      - BUILD_MIMIC=${BUILD_MIMIC}
    container_name: ${CONTAINER_NAME}
    volumes:
      - ${LOCAL_INPUT_CSV}:${CONTAINER_INPUT_CSV}
      - ${LOCAL_SQL_DIR}:${CONTAINER_SQL_DIR}
      - ${LOCAL_OUTPUT_CSV}:${CONTAINER_OUTPUT_CSV}
      - ${LOCAL_DB}:${PGDATA}
    ports:
      - ${PG_HOST_PORT}:5432
    init: true
    stdin_open: true
    tty: true


  # Purpose of postgres_setup is to prevent local user from losing access to
  # local db files. See https://stackoverflow.com/a/75099809 for details.
  # TODO: Experiment with permissions / ownership to make sure database ops in container work properly
  postgres_setup:
    image: ${IMAGE_NAME}
    user: root
    volumes:
      - ${LOCAL_INPUT_CSV}:${CONTAINER_INPUT_CSV}
      - ${LOCAL_SQL_DIR}:${CONTAINER_SQL_DIR}
      - ${LOCAL_OUTPUT_CSV}:${CONTAINER_OUTPUT_CSV}
      - ${LOCAL_DB}:${PGDATA}
    entrypoint: ["/bin/bash", "/docker-entrypoint-initdb.d/pg_entrypoint.sh"]
    depends_on:
      - mimic_db
